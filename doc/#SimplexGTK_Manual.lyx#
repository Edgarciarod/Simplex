#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language spanish-mexico
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Herramienta Gráfica para Resolución de Problemas de Optimización Lineal
\end_layout

\begin_layout Abstract
Esta herramienta es una implementación del algoritmo Simplex con el método
 de la gran 'M'.
 Se desarrolló bajo los lenguajes de programación Python 2.7 y C++, usando
 las librerías de GTK y Glade
\end_layout

\begin_layout Section
Introducción 
\end_layout

\begin_layout Standard
La siguiente pantalla muestra nuestra interfaz recién iniciada.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

~~~~~~~~~~~~~~~~~~~~~~~~
\end_layout

\end_inset


\begin_inset Graphics
	filename Ventanita1.png
	scale 50
	rotateOrigin center

\end_inset

 
\begin_inset Caption

\begin_layout Plain Layout
Pantalla de inicio
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aquí podemos ver que nuestra interfaz tiene varios elementos que son: 
\end_layout

\begin_layout Description
Entrada Es una vista de texto que nos permite capturar el problema a optimizar
 con un formato amigable al usuario familiarizado con los conceptos de optimizac
ión lineal.
\end_layout

\begin_layout Description
Resolver Este botón manda a llamar todo el proceso para solucionar el problema
 de entrada.
\end_layout

\begin_layout Description
Ejemplo Permite mostrar al usuario un ejemplo del formato de entrada al
 usuario no familiarizado con la aplicación.
\end_layout

\begin_layout Description
Limpiar Con este botón limpiamos el buffer de entrada y de salida.
\end_layout

\begin_layout Description
Salida Es una vista de texto no modificable donde mostramos la solución
 óptima, o un mensaje si hubo algún error de formato de entrada o si el
 problema no tiene solución.
\end_layout

\begin_layout Section
Casos de Uso
\end_layout

\begin_layout Subsection
Problema con Solución
\end_layout

\begin_layout Standard
Ponemos como ejemplo el siguiente problema:
\begin_inset Formula 
\[
\begin{array}{cccc}
\textrm{Maiximizar} & -0.5x+3y+z+4w & = & p\\
 & x+y+z+w & \leq & 40\\
 & 2x+y-z-w & \geq & 10\\
 & 2w-y & = & 10
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
En este caso el formato de entrada para nuestro programa será el que se
 muestra en la Figura 2.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

~~~~~~~~~~~~~~~~~~~~~~~~
\end_layout

\end_inset


\begin_inset Graphics
	filename Ventanita2.png
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Pantalla de formato de entrada
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Es necesario hacer notar que la entrada debe contener la palabra 
\begin_inset Quotes eld
\end_inset

Maximize
\begin_inset Quotes erd
\end_inset

 o 
\begin_inset Quotes eld
\end_inset

Minimize
\begin_inset Quotes erd
\end_inset

 seguido de la función a optimizar en la primera línea y en las siguientes
 líneas las restricciones, una por línea.
 También vemos que la multiplicación debe ser denotada con el operador asterisco
 (*).
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
En este momento el usuario tiene la opción de resolver el problema mediante
 el botón 
\begin_inset Quotes eld
\end_inset

Resolver
\begin_inset Quotes erd
\end_inset

 o limpiar el buffer de entrada mediante el botón 
\begin_inset Quotes eld
\end_inset

Limpiar
\begin_inset Quotes erd
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
El botón 
\begin_inset Quotes eld
\end_inset

Resolver
\begin_inset Quotes erd
\end_inset

 internamente activará el código que analiza la entrada y la traduce para
 que nuestro código del algoritmo Simplex pueda facilmente operar con ella
 mediante un formato de matrices y después regresarnos la solución que mostramos
 en nuestra vista de texto de salida.
 La Figura 3 presenta el resultado.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

~~~~~~~~~~~~~~~~~~~~~~~~
\end_layout

\end_inset


\begin_inset Graphics
	filename Ventanita3.png
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Pantalla de solución
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Problema sin Solución
\end_layout

\begin_layout Standard
En caso de que el problema no tenga solución óptima se mostrará una pantalla
 similar a la siguiente:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

~~~~~~~~~~~~~~~~~~~~~~~~
\end_layout

\end_inset


\begin_inset Graphics
	filename Ventanita4.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Pantalla de problema sin solución
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Error de Formato de Entrada
\end_layout

\begin_layout Standard
Por último mostramos, en la siguiente figura, el comportamiento de nuestro
 programa en el caso de que haya un error en el formato de entrada
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

~~~~~~~~~~~~~~~~~~~~~~~~
\end_layout

\end_inset


\begin_inset Graphics
	filename Ventanita5.png
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Pantalla de error de formato
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Sobre la Implementación del Algoritmo Simplex
\end_layout

\begin_layout Standard
El núcleo del programa trabaja de la siguiente manera:
\end_layout

\begin_layout Itemize
Siempre maximiza la función objetivo.
\end_layout

\begin_layout Itemize
Implem
\end_layout

\begin_layout Itemize
La función recibe: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Un vector con los coeficientes de la función objetivo, donde el 
\begin_inset ERT
status open

\begin_layout Plain Layout

$i$
\end_layout

\end_inset

-ésimo elemento corresponde al coeficiente de la 
\begin_inset ERT
status open

\begin_layout Plain Layout

$i$
\end_layout

\end_inset

-ésima variable.
 
\end_layout

\begin_layout Enumerate
Una matriz, donde el elemento 
\begin_inset ERT
status open

\begin_layout Plain Layout

$(i,j)$
\end_layout

\end_inset

 corresponde al coeficiente de la 
\begin_inset ERT
status open

\begin_layout Plain Layout

$j$
\end_layout

\end_inset

-ésima variable en la 
\begin_inset ERT
status open

\begin_layout Plain Layout

$i$
\end_layout

\end_inset

-ésima restricción.
 
\end_layout

\begin_layout Enumerate
Una matriz, donde el elemento 
\begin_inset ERT
status open

\begin_layout Plain Layout

$(i,0)$
\end_layout

\end_inset

 corresponde al coeficiente de la 
\begin_inset ERT
status open

\begin_layout Plain Layout

$i$
\end_layout

\end_inset

-ésima restricción y el elemento 
\begin_inset ERT
status open

\begin_layout Plain Layout

$(i,1)$
\end_layout

\end_inset

 es un -1 si la restricción es un menor qué, un 0 si es un igual qué o un
 1 si es un mayor qué.
\end_layout

\end_deeper
\begin_layout Itemize
La función regresa: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Un vector donde el primer elemento corresponde al valor de la función objetivo
 y el elemento 
\begin_inset ERT
status open

\begin_layout Plain Layout

$(i+1)$
\end_layout

\end_inset

-ésimo corresponde al valor de la i-ésima variable.
\end_layout

\end_deeper
\end_body
\end_document
